
 <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
      html { height: 100% }
      body { height: 100%; margin: 0; padding: 0 }
      #map-canvas { height: 100% }
      body {
      	font-family: Arial;
      }
      .friend {
      	font-size: 20px;
      	margin: 5px; /* This margin collapses! */
      	display: block; /*takes up the entire container*/
      	line-height: 80px; /* set to height of picture, centers text vertically in div. Only works for one line of text */
      	height: 80px; /* set to the height of the picture, prevents weird alignment of divs */
      }

      .friend img {
      	margin-right: 10px;
      }
    </style>
    <script type="text/javascript"
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBuDVr4-db36hkcu4EKdCLOdOK5yikibAs&sensor=false">
    </script>
    <script type="text/javascript">
    //Instantiate Global Variables to give functions access to them.
    var oneWindow; //one window to rule them all.
    var map;
    var placedMarkers = [] //This holds all of our markers, so we can clear them when necessary.
    var lineSymbol;
    var test123;
    function initialize() {
        var mapOptions = {
          center: new google.maps.LatLng(39.828175,-98.5795),
					zoom: 4,
					//disableDefaultUI: true,
					//disableDoubleClickZoom: true,
					//keyboardShortcuts: false,
					panControl: false,
					rotateControl: false,
					streetViewControl: false,
					mapTypeControl: false,
					minZoom: 3,
					maxZoom: 10,
					mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        //We can reuse this symbol for every Polyline
      	lineSymbol = {
		    path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW,
		    scale: 3,
		    strokeColor: '#393',
		    fillColor: '#393',
		    fillOpacity: 1,
		    strokeOpacity: 1
	  	};
        oneWindow = new google.maps.InfoWindow(); 
	    map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions)
		generateMarkers();
		
		// uncomment this line to see the lines after 5 seconds


		window.setTimeout(function(){
		    clearMarkers();
		    animate();
		 	}, 5000);
		
		

      }

      function generateMarkers() {
				
				<% if current_user.been_checked != true %>
					<% current_user.places %>
				<%end%>
				//instantiate a counter variable
				<% count = 0 %>

				//instantiate an empty hash to store hometown=>Marker pairings
				//Should we store LatLong instead of hometowns?
				<% infoWindows = {} %>


				<%current_user.locations.each do |location| %>
					// console.log("We're about to load a marker");
					//Create a new marker on each loop, place on the map.
					//each marker will have a unique name attached to it.

					//Is there already a marker at this hometown?
					<% if infoWindows[location.fb_id] == nil && location.is_hometown %>
						var <%= "marker#{count}" %> = new google.maps.Marker({
							position: new google.maps.LatLng(
								<%= location.latitude %>, // used to be current_user.hometowns_info[each_hometown]["latitude"], then friend.hometown.latitude
								<%= location.longitude %>), //Longitude
							map: map,
							title: '<%=location.name%>'
						});

						placedMarkers.push(<%= "marker#{count}" %>);

						var <%= "info#{count}"%> = '<strong><%= location.name%></strong><hr/>';

						<% location.friends.each do |friend| %>
							<%= "info#{count}"%> += '<div class="friend"><IMG BORDER="0" ALIGN="Left" SRC="http://graph.facebook.com/<%=friend.fb_userid%>/picture?width=80&height=80"> <%= friend.name %></div>';
						<%end%>

						<% infoWindows[location.fb_id] = "info#{count}"; %>

						//add DOM listener
						google.maps.event.addListener(<%= "marker#{count}" %>, 'click', function() {
							oneWindow.setContent(<%=infoWindows[location.fb_id]%>);
							oneWindow.open(map, <%= "marker#{count}"%>);
						});
						<% count = count +1; %>
					<%end%>
				<%end%>

			

			}


		function clearMarkers() {
			for (var i=0; i < placedMarkers.length; i++){
				//placedMarkers[i].setMap(null);
				placedMarkers[i].setVisible(false);
			}
			//placedMarkers = [];
		}

		function animate(){
			console.log("animating");
			//for the easing function
			var percent = 0;
		    var elapsed = 0;
		    var start = 0;
		    var end = 100;
		    var total = 4000; //time it takes to complete the function, in milliseconds

		    
		    var lines = [];
		    <% counter = 0 %>
			<%current_user.locations.each do |location| %>
				<%location.friends.each do |friend| %>
					//console.log("making line" + counter);
					//console.log(<%= counter%>);
					//console.log('<%= "line#{counter}" %>');
					//console.log('<%= Location.find_by_fb_id(friend.hometown).latitude%>');
					<% hometown = Location.find_by_fb_id(friend.hometown) %>
					<% current_location =Location.find_by_fb_id(friend.current_location)%>
					<% if (hometown.latitude != current_location.latitude) && (hometown.longitude != current_location.longitude)%>
						var <%= "line#{counter}" %> = new google.maps.Polyline({
							    path: [
							    	new google.maps.LatLng(<%=hometown.latitude%>, <%=hometown.longitude%>),
							    	new google.maps.LatLng(<%=current_location.latitude%>, <%=current_location.longitude%>)
							    	//new google.maps.LatLng(37.8717, -122.2728)
							    	],
							    icons: [{
							      icon: lineSymbol,
							      offset: '0%'
							    }],
							    geodesic: true,
							    map: map,
							    strokeWeight: .25,
							    //strokeOpacity: 0  //uncomment to turn lines off
							  });
						lines.push(<%= "line#{counter}" %>)
						//console.log(<%= "line#{counter}" %>);

						<% counter = counter + 1 %>
					<%end%>
				<%end%>
			<%end%>

			
			console.log(lines)
			
			test123 = window.setInterval(function() { 
				//console.log("moving markers");

				
				
				var offset = easeOutQuint(percent, elapsed, start, end, total) + '%';
				for(var i=0; i < lines.length; i++) {
					//console.log("editing line " + i);
					var icons = lines[i].get('icons');
				    icons[0].offset = offset;
				    lines[i].set('icons', icons);
				}
				percent += .01;
		    	elapsed += 40;

				if(percent >= 1){
					window.clearInterval(test123);
				}
					
		        //window.clearInterval(test123);
		        
				
			
				/*
				var icons = lines[0].get('icons');
				var tempoffset = easeOutQuint(percent, elapsed, start, end, total) + '%'
			    icons[0].offset = tempoffset;
			    console.log(percent);
			    console.log(tempoffset);
			    percent += .01;
			    elapsed += 40;

			    lines[0].set('icons', icons);
			      //console.log(count);
			     
		        if (percent >= 1){
			        window.clearInterval(test123);
			        lines[0].setOptions({
			          icons: []
				        })
			        new google.maps.Marker({
			          position: new google.maps.LatLng(37.8717, -122.2728),
			          map: map
			        });

			        lines[0].setOptions({strokeOpacity: 0});
			    }
			    */
			    
			}, 30);		



		}

		//EaseOutQuint
	    function easeOutQuint(x, t, b, c, d){
		    if ((t/=d/2) < 1) return c/2*t*t*t + b;
		    return c/2*((t-=2)*t*t + 2) + b;
	  	}

      google.maps.event.addDomListener(window, 'load', initialize);
    </script>
  </head>
  <body>
    <div id="map-canvas"/>
  </body>



		


